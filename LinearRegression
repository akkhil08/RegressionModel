import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_squared_error
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset from your local path
df = pd.read_csv(r"C:\Users\rakkh\Downloads\candy-data.csv")  # Note the raw string (r"...")

# Define features and target
X = df.drop(columns=['competitorname', 'winpercent'])
y = df['winpercent']

# Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluate the model
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print("Model Performance:")
print(f"RÂ² Score: {r2:.4f}")
print(f"Mean Squared Error: {mse:.4f}")

# Display model coefficients
coef_df = pd.DataFrame({
    'Feature': X.columns,
    'Coefficient': model.coef_
}).sort_values(by='Coefficient', key=abs, ascending=False)

print("\nFeature Importance (Linear Coefficients):")
print(coef_df)

# Optional: Visualization
plt.figure(figsize=(8, 6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual Win Percent")
plt.ylabel("Predicted Win Percent")
plt.title("Actual vs Predicted Win Percent")
plt.plot([0, 100], [0, 100], '--', color='red')  # Line y = x
plt.grid(True)
plt.tight_layout()
plt.show()
